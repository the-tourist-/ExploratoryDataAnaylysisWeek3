}
)
source('~/.active-rstudio-document')
)
source('~/.active-rstudio-document')
)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
require(stats)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
require(stats)
system.time(
function() {
setwd("~/GitHub/ExploratoryDataAnaylysisWeek3")
if (!file.exists("NationalEmmissionsInvestoryPollutionData.zip"))
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip",
"exdata_data_household_power_consumption.zip")
if (!file.exists("summarySCC_PM25.rds") | !file.exists("Source_Classification_Code.rds"))
unzip("exdata_data_household_power_consumption.zip")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
}
)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
system.time(readRDS("summarySCC_PM25.rds"))
system.time(readRDS("summarySCC_PM25.rds"))
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
View(NEI)
View(NEI)
View(SCC)
)
)
()
q()
View(SCC)
View(SCC)
library(reshape2)
install.packages("reshape2")
agregate(NEI, Emmisions ~ year)
aggregate(NEI, Emmisions ~ year)
aggregate(NEI, Emmisions ~ year, sum)
aggregate(NEI, Emmisions ~ year by sum)
aggregate(Emmisions ~ year, NEI, sum)
aggregate(Emissions ~ year, NEI, sum)
library(data.table)
install.packages("data.table")
NEIDT <- data.table(NEI)
library(data.table)
NEIDT <- data.table(NEI)
example(data.table)
NEIDT[,sum(Emissions), by=year]
DT  <- SCC[NEI, nomatch=NA]
DT  <- SCC[NEI]
class(NEI)
class(SCC)
SCC <- data.table(readRDS("Source_Classification_Code.rds"))
NEI <- data.table(readRDS("summarySCC_PM25.rds"))
DT  <- SCC[NEI, nomatch=NA]
SCC <- data.table(readRDS("Source_Classification_Code.rds"), key=SCC)
SCC <- data.table(readRDS("Source_Classification_Code.rds"), key="SCC")
DT  <- SCC[NEI, nomatch=NA]
View(DT)
View(DT)
str(NEIDT)
str(NEI)
str(SCC)
SCC$SCC <- as.characters(SCC$SCC)
SCC$SCC <- as.character(SCC$SCC)
str(SCC)
uniqueKeys <- unique(c(NEI[,t], SCC[,t]))
uniqueKeys
uniqueKeys()
uniqueKeys
unique(c(colnames(NEI), colnames(SCC)))
DT <- SCC[NEI(unique(c(colnames(NEI), colnames(SCC)))), nomatch=true]
DT <- SCC[NEI(unique(c(colnames(NEI), colnames(SCC)))), nomatch=NA]
DT <- SCC[NEI[J(unique(c(colnames(NEI), colnames(SCC))))], nomatch=NA]
DT  <- SCC[NEI, nomatch=NA]
SCC <- readRDS("Source_Classification_Code.rds")
SCC$SCC <- as.characters(SCC$SCC)
SCC <- data.table(, key="SCC")
NEI <- readRDS("summarySCC_PM25.rds")
NEI <- data.table(NEI)
NEI <- merge(NEI, SCC, by="SCC", all.y=T)
SCC <- readRDS("Source_Classification_Code.rds")
SCC$SCC <- as.character(SCC$SCC)
SCC <- data.table(SCC, key="SCC")
NEI <- readRDS("summarySCC_PM25.rds")
NEI <- data.table(NEI)
DT  <- merge(NEI, SCC, by="SCC", all.y=T)
rm(c("DF","DT","NEIDT","colNum","uniqueKeys","v","LoadDataSet"))
rm("DF","DT","NEIDT","colNum","uniqueKeys","v","LoadDataSet")
rm("DF","DT","NEIDT","colNum","uniqueKeys","v","LoadDataset")
rm("X")
DT  <- merge(NEI, SCC, by="SCC", all.y=T)
View(DT)
View(DT)
DT  <- merge(NEI, SCC, by="SCC", all.x=T)
NEI[,sum(Emissions), by=year]
hist(DT[,sum(Emissions), by=year])
emisionsByYear <- hist(DT[,sum(Emissions), by=year])
emissionsByYear <- DT[,sum(Emissions), by=year]
emissionsByYear
hist(emissionsByYear$year, emissionsByYear$V1)
plot(emissionsByYear$year, emissionsByYear$V1)
bar(emissionsByYear$year, emissionsByYear$V1)
barplot(emissionsByYear$year, emissionsByYear$V1)
barplot(emissionsByYear$V1)
labels=emissionsByYear$year
rm("labels")
barplot(emissionsByYear$V1, names=emissionsByYear$Year)
barplot(emissionsByYear$V1, xlab=emissionsByYear$Year)
barplot(emissionsByYear$V1, xlab=emissionsByYear$year)
barplot(emissionsByYear$V1, names=emissionsByYear$year)
barplot(emissionsByYear$V1, names=emissionsByYear$year, xlab="Year", ylab="PM2.5", title="Total PM2.5 emission from all sources")
barplot(emissionsByYear$V1, names=emissionsByYear$year, xlab="Year", ylab="PM2.5", main="Total PM2.5 emission from all sources")
DT[DT$fips == "24510",sum(Emissions), by=year]
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
DT[DT$fips == "24510",sum(Emissions), by=year+TYPE][order(year)]
DT[DT$fips == "24510",sum(Emissions), by=year,TYPE][order(year)]
DT[DT$fips == "24510",sum(Emissions), by="year,TYPE"][order(year)]
DT[DT$fips == "24510",sum(Emissions), by="year,type"][order(year)]
DT[DT$fips == "24510",sum(Emissions), by="year,type"][order(year, type)]
library(ggplot2)
install.packages("ggplot2")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type))
library(ggplot2)
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type))
baltimoreByType <- DT[DT$fips == "24510",sum(Emissions), by=year+TYPE][order(year)]
baltimoreByType <- DT[DT$fips == "24510",sum(Emissions), by="year,type"][order(year)]
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type))
baltimoreByType
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_point()
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line()
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(aes(size=3))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(aes(size=2))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(aes(size=1))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(aes(size=0.5))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(size=0.5)
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(size=2)
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(size=2, xlab="Year", ylab="PM2.5", main="Total PM2.5 emission from all sources for Baltimore City")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type), xlab="Year", ylab="PM2.5", main="Total PM2.5 emission from all sources for Baltimore City") + geom_line(size=2)
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type, xlab="Year", ylab="PM2.5", main="Total PM2.5 emission from all sources for Baltimore City")) + geom_line(size=2)
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(size=2) +
xlab="Year" + ylab="PM2.5" + labs(title="Total PM2.5 emission from all sources for Baltimore City")
xlab("Year") + ylab("PM2.5") + labs(title="Total PM2.5 emission from all sources for Baltimore City")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) + geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + labs(title="Total PM2.5 emission from all sources for Baltimore City")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
element_text(face="bold")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
theme(plot.title = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold"), plot.xlab = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold"), plot.axis.title.x = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold"), axis.title.x = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(title = element_text(face="bold"), axis.title.x = element_text(face="bold"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(title = element_text(face="bold")) +
scale_fill_discrete(name="Emission Type")
scale_line_discrete(name="Emission Type")
scale_linetype_discrete(name="Emission Type")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold")) +
scale_linetype_discrete(name="Experimental\nCondition")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold")) +
scale_colour_manual(name="Emission Type")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 emission from by Type for Baltimore City") +
theme(plot.title = element_text(face="bold")) +
scale_colour_discrete(name="Emission Type")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 Emissions by Type for Baltimore City") +
theme(title = element_text(face="bold")) +
scale_colour_discrete(name="Emission Type")
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 Emissions by Type for Baltimore City") +
theme(title = element_text(face="bold")) +
scale_colour_discrete(name="Emission Type", Labels=c("Non-Road", "Non-Point", "On-Road", "Point"))
ggplot(baltimoreByType, aes(x=year, y=V1, colour=type)) +
geom_line(size=2) +
xlab("Year") + ylab("PM2.5") + ggtitle("Total PM2.5 Emissions by Type for Baltimore City") +
theme(title = element_text(face="bold")) +
scale_colour_discrete(name="Emission Type", labels=c("Non-Road", "Non-Point", "On-Road", "Point"))
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
unique(grep("Coal", DT$SCC.Level.Three))
unique(DT$SCC.Level.Three[grep("Coal", DT$SCC.Level.Three)])
unique(DT$SCC.Level.Two[grep("Coal", DT$SCC.Level.Three)])
DT[grep("Coal", DT$SCC.Level.Three), sum(Emissions), by="year"][order(year)]
DT[grep("Coal.*Comb", DT$Short.Name), sum(Emissions), by="year"][order(year)]
DT[grep("Coal.*Comb", DT$El.Sector), sum(Emissions), by="year"][order(year)]
DT[grep("Coal&Comb", DT$El.Sector), sum(Emissions), by="year"][order(year)]
DT[grep("Coal", DT$El.Sector), sum(Emissions), by="year"][order(year)]
grep("Coal", DT$El.Sector)
DT[grep(".*Coal.*", DT$El.Sector), sum(Emissions), by="year"][order(year)]
grep("Fuel", DT$El.Sector)
grep("Coal", DT$Short.Name)
str(DT)
DT[grep("Coal", DT$EI.Sector), sum(Emissions), by="year"][order(year)]
DT[grep("Coal", DT$SCC.Level.Three), sum(Emissions), by="year"][order(year)]
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
ln(3)
log(3)
normdist(3)
dnorm(3)
dnorm(0)
qnorm(0)
pnorm(0)
pnorm(3)
pnorm(2.5)
pnorm(2)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
install.packages("ggplot")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.1")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots3&4.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
install.packages("data.table")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plots1&2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
View(baltimoreByType)
View(DT)
unique(DT$El.Sector[DT$Data.Category=="ON-ROAD"])
unique(DT$Data.Category)
unique(DT$El.Sector[DT$Data.Category=="Onroad"])
sum(DT$El.Sector[DT$Data.Category=="Onroad"])
sum(DT$El.Sector[DT$Data.Category=="Point"])
DT$Data.Category[1]
paste("#", DT$Data.Category[1], "#", sep="")
DT$Data.Category[1]=="Point"
DT$Data.Category=="Point"
sum(DT$Data.Category=="Onroad")
unique(DT$EI.Sector[DT$Data.Category=="Onroad"])
onroadSectors <- unique(DT$EI.Sector[DT$Data.Category=="Onroad"])
as.character(unique(DT$EI.Sector[DT$Data.Category=="Onroad"]))
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
ls()
ls()='SCC'
ls()="SCC"
ls()=="SCC"
sum(ls()=="SCC")
class("SCC")
rm(list=ls())
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
class("SCC")
detach(DT)
detach("DT")
detach("SCC")
detach("NEI")
class(DT)
class(NEI)
class(SCC)
class(SCC)
(sum(ls()=="SCC")==0 || sum(class(SCC) == "data.table")==0)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot3.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
dev.off()
dev.off()
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
View(emissionsByYear)
View(emissionsByYear)
lm(V1 ~ year, data=emissionsByYear)
lines(emissionsByYear, fitted(lm(V1 ~ year, data=emissionsByYear)), col="blue")
lines(emissionsByYear$V1, fitted(lm(V1 ~ year, data=emissionsByYear)), col="blue")
lines(emissionsByYear$year, fitted(lm(V1 ~ year, data=emissionsByYear)), col="blue")
emissionsByYear$year
lines(emissionsByYear$year, fitted(lm(V1 ~ year, data=emissionsByYear)), col="blue")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
with(emissionsByYear, summary(fit<-lm(V1~year)))
bp <- barplot(emissionsByYear$V1, names=emissionsByYear$year, xlab="Year", ylab="PM2.5", main="Total PM2.5 emission from all sources")
lines(bp, predict(lm(V1 ~ year, data=emissionsByYear)), col="blue")
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot1.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot2.R')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
dev.off()
dev.off()
dev.off()
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
max(coal$V1)*1.2
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot4.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source.with.encoding('~/GitHub/ExploratoryDataAnaylysisWeek3/plot5.R', encoding='UTF-8')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
print(chart)
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/plot6.R')
source('~/GitHub/ExploratoryDataAnaylysisWeek3/LoadDataset.R')
